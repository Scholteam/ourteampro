<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd">
	
   <!-- 1:启动SpringMVC基于注解的默认配置,因为默认是基于xml的 -->
   <mvc:annotation-driven></mvc:annotation-driven>
   <!-- 2.扫描创建类 -->
   <context:component-scan base-package="com.niit"></context:component-scan>
   <!-- 3.返回的视图的解释 -->
   <!-- 因为SpringMVC默认已经配置jsp视图解释器,所以如果页面是jsp就不用配置了 -->
   <bean name="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 默认的视图是不支持jstl,所以要支持jstl,配置jstl的视图 -->
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
        <!-- 给视图的路径自动加上前缀,等同我们在业务控制器不用写前缀了 -->
       <property name="prefix" value="/WEB-INF/views/jsp/"></property>
         <!-- 给视图的路径自动加上后缀,等同我们在业务控制器不用写.jsp了 -->
       <property name="suffix" value=".jsp"></property>
   </bean>
	
	
	<!-- 4:SessionFactory对象 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="configLocation" value="classpath:hibernate.cfg.xml"/>
	</bean>
	
	
	<!--5: HibernateTemplate对象 -->
	<bean id="ht" class="org.springframework.orm.hibernate5.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<!-- 添加事务管理配置 -->
	<!-- 6.创建平台事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<!-- 7.创建事务通知 -->
	<tx:advice id="txAdivce" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" isolation="DEFAULT" propagation="REQUIRED"/>
			<tx:method name="update*" isolation="DEFAULT" propagation="REQUIRED"/>
			<tx:method name="delete*" isolation="DEFAULT" propagation="REQUIRED"/>
			<tx:method name="find*" isolation="DEFAULT" propagation="REQUIRED" read-only="true"/>
			<tx:method name="*" isolation="DEFAULT" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
	<!-- 8.创建事务切面 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.niit.service.impl.*Biz.*(..))" id="myPt"/>
		<aop:advisor advice-ref="txAdivce" pointcut-ref="myPt"/>
	</aop:config>
	
</beans>

